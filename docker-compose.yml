version: '3.8'
services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "transcribify"
    ports:
      - "5432:5432"
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    depends_on:
      - web
  javabackend:
    build:
      context: ./backend_java
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - db
  javanode:
    build:
      context: ./backend_java/nodes
      dockerfile: Dockerfile
    ports:
      - "8082:8082"

  webserver:
    build: .
    image: web
    container_name: webserver
    ports:
      - 5004:5000
    command: flask run -h 0.0.0.0
    volumes:
      - .:/usr/src/app
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=project.server.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLASK_APP=project.server
    depends_on:
      - redis

  worker:
    build: .
    command: celery --app=project.server.tasks.celery worker --loglevel=info --logfile=project/logs/celery.log
    volumes:
      - .:/usr/src/app
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=project.server.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - webserver
      - redis

  dashboard:
    build: .
    command: celery --app=project.server.tasks.celery --broker=redis://redis:6379/0 flower --port=5555
    ports:
      - 5556:5555
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=project.server.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - webserver
      - redis
      - worker

  redis:
    image: redis:6-alpine






